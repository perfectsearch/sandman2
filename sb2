#!/usr/bin/env python3
# (c) 2016 Kim mEbert and contributors
# Licensed under the MIT license
import sys
import argparse as ap
import argcomplete
from lib.config import Config
from lib.sandbox import Sandbox
from lib.exceptions import ConfigError
from lib.config import LOCAL_CONF
from lib.config import DEFAULT_CONF
import os
sys.tracebacklimit = None

if sys.version_info[0] != 3 or sys.version_info[1] < 4:
    print("This script requires at least Python version 3.4")
    sys.exit(1)

sandbox = None


def get_sandbox():
    global sandbox
    if not sandbox:
        base_dir, name = Sandbox.get_sandbox_from_path('.')
        if not base_dir:
            return None
        sandbox = Sandbox(base_dir, name, Config.get_config())
    return sandbox


def get_commands():
    try:
        sandbox = get_sandbox()
    except ConfigError as e:
        return [e.message.replace(' ', '_').lower()[0:138]]
    if not sandbox:
        print("%s must be run in a sandbox" % os.path.basename(__file__))
        return ['not_a_sandbox']
    return sandbox.get_commands()


def main(**args_):
    sandbox = get_sandbox()
    if sandbox:
        sandbox.exe_command(args_['command'])

if __name__ == '__main__':
    config_path = Config.local_config_to_parse()
    parser = ap.ArgumentParser(description="A tool that replaces sbverb.")
    parser.add_argument('command',
                        help="The available commands for the sandbox %s" % Sandbox.get_sandbox_from_path('.')[1],
                        choices=get_commands()
                        )
    parser.add_argument('--config-path',
                        help="""
                            The sandman configuration file.  Uses %s by default but
                            %s would override that. Currently it is using %s.
                             """ % (DEFAULT_CONF, LOCAL_CONF, config_path),
                        default=config_path)
    argcomplete.autocomplete(parser)
    args = parser.parse_args()
    main(**vars(args))

